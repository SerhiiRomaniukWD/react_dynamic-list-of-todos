{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","chooseTodo","selectedTodo","className","map","todo","id","title","completed","cn","type","onClick","TodoFilter","category","handleChangeCategory","query","handleChangeQuery","resetQuery","value","onChange","placeholder","style","pointerEvents","length","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getTodos","a","TodoModal","resetTodo","useState","user","setUser","useEffect","userId","userFromServer","href","email","name","App","setCategory","setQuery","setTodos","setSelectedTodo","todosList","selectTodo","visibleTodos","filter","titleLowerCase","toLowerCase","queryLowerCase","isTitleIncludeQuery","includes","event","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c4ba4e94.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[] | null;\n  chooseTodo: (todo: Todo) => void;\n  selectedTodo: Todo | null;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  chooseTodo,\n  selectedTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos?.map(todo => {\n        const {\n          id,\n          title,\n          completed,\n        } = todo;\n\n        return (\n          <tr\n            data-cy=\"todo\"\n            className={cn({\n              'has-background-info-light': todo.id === selectedTodo?.id,\n            })}\n            key={id}\n          >\n            <td className=\"is-vcentered\">{id}</td>\n            <td className=\"is-vcentered\">\n              {completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={cn({\n                'has-text-success': completed,\n                'has-text-danger': !completed,\n              })}\n              >\n                {title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => {\n                  if (todo) {\n                    chooseTodo(todo);\n                  }\n                }}\n              >\n                <i className={cn('far', {\n                  'fa-eye': selectedTodo?.id !== todo.id,\n                  'fa-eye-slash': selectedTodo?.id === todo.id,\n                })}\n                />\n              </button>\n            </td>\n          </tr>\n        );\n      })}\n    </tbody>\n  </table>\n);\n","import React, { FC } from 'react';\n\ntype Props = {\n  category: string;\n  handleChangeCategory: (event: React.ChangeEvent<HTMLSelectElement>) => void;\n  query: string;\n  handleChangeQuery: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  resetQuery: () => void;\n};\n\nexport const TodoFilter: FC<Props> = ({\n  category,\n  handleChangeCategory,\n  query,\n  handleChangeQuery,\n  resetQuery,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={category}\n          onChange={handleChangeCategory}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={handleChangeQuery}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n        {query.length > 0 && (\n          // eslint-disable-next-line jsx-a11y/control-has-associated-label\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={resetQuery}\n          />\n        )}\n      </span>\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = async () => (get<Todo[]>('/todos'));\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import { FC, useEffect, useState } from 'react';\nimport cn from 'classnames';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ntype Props = {\n  todo: Todo;\n  resetTodo: () => void;\n};\n\nexport const TodoModal: FC<Props> = ({\n  todo,\n  resetTodo,\n}) => {\n  const [user, setUser] = useState<User>();\n\n  useEffect(() => {\n    if (todo) {\n      getUser(todo.userId).then(userFromServer => setUser(userFromServer));\n    }\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              aria-label=\"Close todo info\"\n              onClick={resetTodo}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              <strong className={cn({\n                'has-text-danger': !todo.completed,\n                'has-text-success': todo.completed,\n              })}\n              >\n                {todo.completed\n                  ? 'Done'\n                  : 'Planned'}\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { FC, useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport const App: FC = () => {\n  // Category block\n  const [category, setCategory] = useState('all');\n\n  const handleChangeCategory = (\n    event: React.ChangeEvent<HTMLSelectElement>,\n  ) => {\n    setCategory(event.target.value);\n  };\n\n  // Query block\n  const [query, setQuery] = useState('');\n\n  const handleChangeQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n  };\n\n  const resetQuery = () => (setQuery(''));\n\n  // Todos block\n  const [todos, setTodos] = useState<Todo[]>();\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>();\n\n  useEffect(() => {\n    getTodos().then(todosList => setTodos(todosList));\n  }, [selectedTodo]);\n\n  const selectTodo = (todo: Todo | null) => {\n    setSelectedTodo(todo);\n  };\n\n  const visibleTodos = todos?.filter(todo => {\n    const titleLowerCase = todo.title.toLowerCase();\n    const queryLowerCase = query.toLowerCase();\n    const isTitleIncludeQuery = titleLowerCase.includes(queryLowerCase);\n\n    switch (category) {\n      case 'completed':\n        return todo.completed && isTitleIncludeQuery;\n      case 'active':\n        return !todo.completed && isTitleIncludeQuery;\n      default:\n        return isTitleIncludeQuery;\n    }\n  }) || null;\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                category={category}\n                handleChangeCategory={handleChangeCategory}\n                query={query}\n                handleChangeQuery={handleChangeQuery}\n                resetQuery={resetQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {todos\n                ? (\n                  <TodoList\n                    todos={visibleTodos}\n                    chooseTodo={selectTodo}\n                    selectedTodo={selectedTodo || null}\n                  />\n                )\n                : <Loader />}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          todo={selectedTodo}\n          resetTodo={() => selectTodo(null)}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}